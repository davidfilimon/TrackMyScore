@model CurrentRoomModel
@{
    int joinedPlayers = Model.Players.Count;
    var loggedUser = Model.LoggedUser;
    var userJoined = Model.UserJoined;
    var players = Model.Players;
    var participants = Model.Participants;
}

<div>
    <p>Room Name: @Model.Room.Name</p>
    <p>Game: @Model.Room.Game.Title</p>
    <p>Creator: @Model.Room.Host.Username</p>
    <p>Location: @Model.Room.Location</p>
    <p>Numar jucatori: @joinedPlayers / @Model.Room.Game.MaxPlayers</p>
    @if(Model.Room.Tournament == null){
       <p>Start Date: @Model.Room.StartDate</p>
    }
       <p>Room Type: @Model.Room.Type</p>
    @if(Model.Room.Stage == -1 && Model.Room.Tournament == null){
        <div>
            Waiting for the host to start the game.
        </div>
    } else if (Model.Room.Stage == -1 && Model.Room.Tournament != null){
        <div>
          Waiting for host to start the tournament bracket.
        </div>
    } else if(Model.Room.Stage == 0){
        <div>
            There is an ongoing match.
        </div>
    } else if(Model.Room.Stage == -2){
        <div>
            The game has ended.
        </div>
    }
    @if(Model.Room.Stage != -2){
        @if (loggedUser.Username != Model.Room.Host.Username && Model.Room.Stage == -1)
    {
        @if (userJoined)
        {
            <a class="btn btn-danger" onclick="leave(@Model.Room.Id)">Leave</a>
        }
        else
        {
            <a class="btn btn-dark" onclick="join(@Model.Room.Id)">Join</a>
        }
    }
    else
    {
        if(Model.Room.Stage == -1){
            <button id="startButton" class="btn btn-dark" data-room-id="@Model.Room.Id" onclick="checkAndOpenModal(@Model.Room.Id)">Start Match</button>
        if(Model.Room.Tournament == null){
           <form method="post" asp-action="Delete" asp-controller="Room" asp-route-roomId="@Model.Room.Id">
                <button type="submit" class="btn btn-danger">Delete</button>
           </form>
        }
            
        }
        else if (Model.Room.Stage == 0 && loggedUser.Username == Model.Room.Host.Username)
        {
            <button id="endMatchButton" class="btn btn-danger" style="display:block;" onclick="endMatch(@Model.CurrentMatch.Id)">End Match</button>
        }
        
    }
@if (loggedUser.Username == Model.Room.Host.Username && Model.Room.Stage == -1 && Model.Room.Tournament == null)
{
    <div>
        <label>Mode:</label>
        <input type="radio" name="mode" value="single" checked onclick="toggleMode('single')" /> Single Mode
        <input type="radio" name="mode" value="team" onclick="toggleMode('team')" /> Team Mode
    </div>
}
    }
</div>

<div class="player-list" style="display: block;">
    <ul>
        @if(@Model.Room.Mode == "single"){
            <table>
                <th>
                    Player
                </th>
                <th>
                    Score
                </th>
                @if(Model.Room.Stage == 0 && Model.LoggedUser.Username == Model.Room.Host.Username){
                <th>
                    Add point
                </th>
                <th>
                    Remove point
                </th>
                }
              @if(Model.Room.Stage == 0){
                @foreach (var participant in Model.Participants)
                {
                    <tr>
                        <td>
                            @participant.User.Username
                        </td>
                        <td>
                            @participant.Score
                        </td>
                        @if(Model.Room.Stage == 0 && Model.LoggedUser.Username == Model.Room.Host.Username){   
                            <td>
                                <button class="btn" onclick="addPoint(@Model.CurrentMatch.Id, @participant.Id)">Add Point</button>
                            </td>
                            <td>
                                <button class="btn btn-danger" onclick="removePoint(@Model.CurrentMatch.Id, @participant.Id)">Remove Point</button>
                            </td>
                        }                           
                    </tr>
                  }
                } else if (Model.Room.Stage == -1){
                @foreach (var joinedPlayer in Model.JoinedPlayersList)
                {
                    <tr>
                        <td>
                        @joinedPlayer.Username
                        </td>
                    </tr>
                }
                }       
            </table>
        }
        @if(@Model.Room.Mode == "team"){
                <table>
                <th>
                    Team
                </th>
                <th>
                    Score
                </th>
                @if(Model.Room.Stage == 0 && Model.LoggedUser.Username == Model.Room.Host.Username){
                <th>
                    Add point
                </th>
                <th>
                    Remove point
                </th>
                }
                @foreach (var team in Model.Teams)
                {
                    <tr>
                        <td>
                            @team.Key.Name
                        </td>
                        <td>
                            @team.Value
                        </td>
                        @if(Model.Room.Stage == 0 && Model.Room.Host.Username == Model.LoggedUser.Username){   
                            <td>
                                <button class="btn" onclick="addPointTeam(@Model.CurrentMatch.Id, @team.Key.Id)">Add Point</button>
                            </td>
                            <td>
                                <button class="btn btn-danger" onclick="removePointTeam(@Model.CurrentMatch.Id, @team.Key.Id)">Remove Point</button>
                            </td>
                        }                           
                    </tr>
                }
            </table>
        }
    </ul>
</div>


<!-- Team Setup Modal -->
<div class="modal fade" id="startEarlyModal" tabindex="-1" aria-labelledby="startEarlyModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="teamAssignmentForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="startEarlyModalLabel">Create the teams</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <button type="button" class="btn btn-outline-primary" onclick="addTeam()">Add Team</button>
                    </div>
                    <div id="teamsContainer" class="row">
                        <!-- Teams will be added here dynamically -->
                    </div>
                    <hr />
                    <h5>Assign players to their teams and roles.</h5>
                    @if (players == null || !players.Any())
                    {
                        <p>No players have joined yet.</p>
                    }
                    else
                    {
                        @foreach (var player in players)
                        {
                            <div class="mb-2">
                                <label>@player.Username</label>
                                <select name="teamAssignments[@player.Id]" class="form-select team-select">
                                    <option value="">--Selecteaza o echipa--</option>
                                </select>
                                <input type="text" name="roles[@player.Id]" class="form-control mt-2" placeholder="Role" />
                            </div>
                        }
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" onclick="startGame(@Model.Room.Id)" class="btn btn-primary">Confirm Start</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    function endMatch(matchId){
        $.ajax({
            url: '/Room/End',
            type: 'POST',
            data: { 
                matchId: matchId
            },
            success: function(response) {
                if(response.success){
                    location.reload();
                } else {
                    alert(response.message);
                }
            },
            error: function(xhr, status, error) {
                alert('An error occurred while ending the match.');
            }
        });
    }

    function addPoint(matchId, participantId){
        $.ajax({
            url: "/Room/AddPoint",
            type: "POST",
            data: {
                matchId: matchId,
                participantId: participantId
            },
            success: function(){
                location.reload();
            },
            error: function(xhr, status, error){
                alert('An error occurred while adding a point.');
            }
        })
    }

    function removePoint(matchId, participantId){
        $.ajax({
            url: "/Room/RemovePoint",
            type: "POST",
            data: {
                matchId: matchId,
                participantId: participantId
            },
            success: function(){
                location.reload();
            },
            error: function(xhr, status, error){
                alert('An error occurred while removing a point.');
            }
        })
    }

    function addPointTeam(matchId, teamId){
        $.ajax({
            url: "/Room/AddPointTeam",
            type: "POST",
            data: {
                matchId: matchId,
                teamId: teamId
            },
            success: function(){
                location.reload();
            },
            error: function(xhr, status, error){
                alert('An error occurred while adding a point.');
            }
        })
    }

    function removePointTeam(matchId, teamId){
        $.ajax({
            url: "/Room/RemovePointTeam",
            type: "POST",
            data: {
                matchId: matchId,
                teamId: teamId
            },
            success: function(){
                location.reload();
            },
            error: function(xhr, status, error){
                alert('An error occurred while removing a point.');
            }
        })
    }
</script>
