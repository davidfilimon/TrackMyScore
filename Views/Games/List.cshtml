@using TrackMyScore.Services
@model GamesViewModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Game List";
    List<Game> allGames = Model.AllGames ?? new();
    List<Game> recommendedGames = Model.RecommendedGames ?? new();
}
@inject UserService userService

<style>
    :root {
        --primary-dark: #1A3C2A;
        --primary: #2A5940;
        --primary-light: #3B7A5A;
        --accent-gold: #D4AF37;
        --accent-gold-light: #F0D875;
        --accent-wood: #966F33;
        --text-light: #E8F5E9;
        --text-muted: #ffffff;
        --card-bg: #234134;
        --input-bg: #1A3C2A;
        --input-border: #3B7A5A;
        --input-focus: #D4AF37;
        --error: #CF6679;
        --success: #4CAF50;
        --spacing-unit: 8px;
    }

    body {
        font-family: Arial, Helvetica, sans-serif;
        background-color: var(--primary-dark);
        color: var(--text-light);
        min-height: 100vh;
        line-height: 1.5;
    }

    .container-fluid {
        max-width: 1200px;
    }

    .header-section {
        background-color: var(--card-bg);
        border-radius: 12px;
        padding: calc(var(--spacing-unit) * 3);
        margin-bottom: calc(var(--spacing-unit) * 4);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        align-items: center;
        gap: 1rem;
    }

    .header-section h2 {
        color: var(--text-light);
        font-weight: 600;
        margin-bottom: 0;
        flex-shrink: 0;
    }

    .btn-add-game {
        background-color: var(--accent-gold);
        border: none;
        color: var(--primary-dark);
        font-weight: 600;
        padding: calc(var(--spacing-unit) * 1.5) calc(var(--spacing-unit) * 3);
        border-radius: 8px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        text-decoration: none;
        flex-shrink: 0;
    }

    .btn-add-game:hover, .btn-add-game:focus {
        background-color: var(--accent-gold-light);
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        color: var(--primary-dark);
    }

    .search-bar1 {
        flex-grow: 1;
        max-width: 500px;
    }

    .search-input1 {
        background-color: var(--input-bg);
        border: 2px solid var(--input-border);
        color: var(--text-light);
        padding: calc(var(--spacing-unit) * 1.5);
        border-radius: 8px;
        transition: all 0.3s ease;
        width: 100%;
    }

    .search-input1:focus {
        background-color: var(--input-bg);
        border-color: var(--input-focus);
        color: var(--text-light);
        box-shadow: 0 0 0 0.2rem rgba(212, 175, 55, 0.25);
    }

    .search-input1::placeholder {
        color: var(--text-muted);
        opacity: 0.7;
    }

    .game-section {
        background-color: var(--card-bg);
        border-radius: 12px;
        padding: calc(var(--spacing-unit) * 4);
        margin-bottom: calc(var(--spacing-unit) * 4);
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
    }

    .game-section h3 {
        color: var(--text-light);
        font-weight: 600;
        margin-bottom: calc(var(--spacing-unit) * 3);
    }

    .table {
        color: var(--text-light);
        margin-bottom: 0;
    }

    .table thead th {
        border-bottom: 2px solid var(--input-border);
        color: var(--text-muted);
        padding-bottom: calc(var(--spacing-unit) * 2);
    }

    .table tbody tr {
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .table tbody tr:last-child {
        border-bottom: none;
    }

    .table tbody td {
        padding: calc(var(--spacing-unit) * 2) 0;
        vertical-align: middle;
    }

    .heart-icons {
        color: var(--accent-gold) !important;
        transition: color 0.3s ease, transform 0.2s ease;
        font-size: 1.2rem;
        padding-right: calc(var(--spacing-unit) * 2);
    }

    .heart-icons:hover {
        color: var(--accent-gold-light) !important;
        cursor: pointer;
        transform: scale(1.1);
    }

    .btn-details {
        background-color: var(--primary);
        border: 1px solid var(--primary-light);
        color: var(--text-light);
        padding: calc(var(--spacing-unit) * 1) calc(var(--spacing-unit) * 2);
        border-radius: 6px;
        transition: all 0.3s ease;
        text-decoration: none;
        font-size: 0.9rem;
    }

    .btn-details:hover {
        background-color: var(--primary-light);
        color: var(--text-light);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .no-games-message {
        text-align: center;
        padding: calc(var(--spacing-unit) * 3);
        color: var(--text-muted);
        font-style: italic;
    }
</style>

<div class="container-fluid">
    <div class="header-section">
        <h2>Board Game List</h2>
        <div class="d-flex align-items-center flex-grow-1 justify-content-end gap-3">
            <div class="search-bar1">
                <input type="text" id="gameSearch" class="form-control search-input1" placeholder="Search games...">
            </div>
            <a class="btn btn-add-game" asp-action="AddGame" asp-controller="Games">
                <i class="fa-solid fa-plus me-2"></i> Add Game
            </a>
        </div>
    </div>

    @* Recommended Games Section *@
    <div class="game-section mb-4">
        <h3>Recommended Games for You</h3>
        <div class="table-responsive">
            <table class="table align-middle">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Max Players</th>
                        <th>Difficulty</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="recommendedGamesTableBody">
                    @if (recommendedGames.Any())
                    {
                        @foreach (var game in recommendedGames)
                        {
                            <tr class="game-row" data-title="@game.Title.ToLower()">
                                <td>@game.Title</td>
                                <td>@game.MaxPlayers</td>
                                <td>@game.Difficulty</td>
                                <td>
                                    <a onclick="toggleFavorite(@game.Id, this)" class="d-inline-block align-middle">
                                        @if (!await userService.IsGameFavorite(@game.Id))
                                        {
                                            <i class="fa-solid fa-heart heart-icons"></i>
                                        }
                                        else
                                        {
                                            <i class="fa-regular fa-heart heart-icons"></i>
                                        }
                                    </a>
                                    <a class="btn btn-details d-inline-block align-middle" asp-action="Details" asp-controller="Games" asp-route-id="@game.Id">
                                        Details
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="no-games-message">No recommendations available at the moment. Add some favorites to get started!</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="game-section mb-4">
        <h3>Official Games</h3>
        <div class="table-responsive">
            <table class="table align-middle">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Max Players</th>
                        <th>Difficulty</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="officialGamesTableBody">
                    @if (allGames.Any(g => g.IsOfficial))
                    {
                        @foreach (var game in allGames.Where(g => g.IsOfficial))
                        {
                            <tr class="game-row" data-title="@game.Title.ToLower()">
                                <td>@game.Title</td>
                                <td>@game.MaxPlayers</td>
                                <td>@game.Difficulty</td>
                                <td>
                                    <a onclick="toggleFavorite(@game.Id, this)" class="d-inline-block align-middle">
                                        @if (!await userService.IsGameFavorite(@game.Id))
                                        {
                                            <i class="fa-solid fa-heart heart-icons"></i>
                                        }
                                        else
                                        {
                                            <i class="fa-regular fa-heart heart-icons"></i>
                                        }
                                    </a>
                                    <a class="btn btn-details d-inline-block align-middle" asp-action="Details" asp-controller="Games" asp-route-id="@game.Id">
                                        Details
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="no-games-message">No official games found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="game-section">
        <h3>Unofficial Games</h3>
        <div class="table-responsive">
            <table class="table align-middle">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Author</th>
                        <th>Max Players</th>
                        <th>Difficulty</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="unofficialGamesTableBody">
                    @if (allGames.Any(g => !g.IsOfficial))
                    {
                        @foreach (var game in allGames.Where(g => !g.IsOfficial))
                        {
                            <tr class="game-row" data-title="@game.Title.ToLower()">
                                <td>@game.Title</td>
                                <td>@game.Author.Username</td>
                                <td>@game.MaxPlayers</td>
                                <td>@game.Difficulty</td>
                                <td>
                                    <a onclick="toggleFavorite(@game.Id, this)" class="d-inline-block align-middle">
                                        @if (!await userService.IsGameFavorite(@game.Id))
                                        {
                                            <i class="fa-solid fa-heart heart-icons"></i>
                                        }
                                        else
                                        {
                                            <i class="fa-regular fa-heart heart-icons"></i>
                                        }
                                    </a>
                                    <a class="btn btn-details d-inline-block align-middle" asp-action="Details" asp-controller="Games" asp-route-id="@game.Id">
                                        Details
                                    </a>
                                    <a class="btn btn-danger btn-details ms-2 d-inline-block align-middle" asp-action="Delete" asp-controller="Games" asp-route-id="@game.Id">
                                        Delete
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="no-games-message">No unofficial games found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    // Toggling favorite game
    async function toggleFavorite(gameId, element) {
        console.log(`Toggling favorite for game ID: ${gameId}`);
        try {
            const response = await fetch(`/Games/ToggleFavorite/${gameId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            if (response.ok) {
                const icon = element.querySelector('i');
                if (icon.classList.contains('fa-solid')) {
                    icon.classList.remove('fa-solid');
                    icon.classList.add('fa-regular');
                } else {
                    icon.classList.remove('fa-regular');
                    icon.classList.add('fa-solid');
                }
                location.reload();
            } else {
                console.error('Failed to toggle favorite status.');
                alert('Could not update favorite status. Please try again.');
            }
        } catch (error) {
            console.error('Error toggling favorite:', error);
            alert('An error occurred. Please try again.');
        }
    }
    // Game search function
    document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.getElementById('gameSearch');

        searchInput.addEventListener('keyup', function () {
            const searchTerm = searchInput.value.toLowerCase();
            const gameRows = document.querySelectorAll('.game-row');

            gameRows.forEach(row => {
                const title = row.getAttribute('data-title');
                if (title.includes(searchTerm)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });
    });
</script>