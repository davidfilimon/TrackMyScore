@model TournamentListView

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - TrackMyScore</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
</head>
<style>
    :root {
        --primary-dark: #1A3C2A;
        --primary: #2A5940;
        --primary-light: #3B7A5A;
        --accent-gold: #D4AF37;
        --accent-gold-light: #F0D875;
        --accent-wood: #966F33;
        --text-light: #E8F5E9;
        --text-muted: #ffffff;
        --card-bg: #234134;
        --input-bg: #1A3C2A;
        --input-border: #3B7A5A;
        --input-focus: #D4AF37;
        --error: #CF6679;
        --success: #4CAF50;
        --spacing-unit: 8px;
    }

    body {
        font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
        background-color: var(--primary-dark);
        color: var(--text-light);
        min-height: 100vh;
        line-height: 1.5;
        padding: calc(var(--spacing-unit) * 10) calc(var(--spacing-unit) * 4) calc(var(--spacing-unit) * 4);
    }

    .container-fluid {
        max-width: 1200px; /* Limit width for better readability */
    }

    .header-section {
        background-color: var(--card-bg);
        border-radius: 12px;
        padding: calc(var(--spacing-unit) * 3);
        margin-bottom: calc(var(--spacing-unit) * 4);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        align-items: center;
    }

    .header-section h1 {
        color: var(--text-light);
        font-weight: 600;
        margin-bottom: 0;
    }

    /* Renamed and applied to all gold buttons */
    .btn-accent-gold {
        background-color: var(--accent-gold);
        border: none;
        color: var(--primary-dark);
        font-weight: 600;
        padding: calc(var(--spacing-unit) * 1.5) calc(var(--spacing-unit) * 3);
        border-radius: 8px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        text-decoration: none;
    }

    .btn-accent-gold:hover, .btn-accent-gold:focus {
        background-color: var(--accent-gold-light);
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        color: var(--primary-dark);
    }

    .search-bar1 {
        width: 30%;
        padding-right: 20px;
    }

    .search-input1 {
        background-color: var(--input-bg);
        border: 2px solid var(--input-border);
        color: var(--text-light);
        padding: calc(var(--spacing-unit) * 1.5);
        border-radius: 8px;
        transition: all 0.3s ease;
    }

    .search-input1:focus {
        background-color: var(--input-bg);
        border-color: var(--input-focus);
        color: var(--text-light);
        box-shadow: 0 0 0 0.2rem rgba(212, 175, 55, 0.25);
    }

    .search-input1::placeholder {
        color: var(--text-muted);
        opacity: 0.7;
    }

    .tournament-section {
        background-color: var(--card-bg);
        border-radius: 12px;
        padding: calc(var(--spacing-unit) * 4);
        margin-bottom: calc(var(--spacing-unit) * 4);
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
    }

    .tournament-section h2 {
        color: var(--text-light);
        font-weight: 600;
        margin-bottom: calc(var(--spacing-unit) * 3);
    }

    .tournament-card {
        background-color: var(--primary);
        border-radius: 10px;
        padding: calc(var(--spacing-unit) * 3);
        margin-bottom: calc(var(--spacing-unit) * 3);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .tournament-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);
    }

    .tournament-name {
        font-size: 1.4rem;
        font-weight: 600;
        color: var(--text-light);
        margin-bottom: calc(var(--spacing-unit) * 1.5);
    }

    .tournament-author { /* New style for author */
        font-size: 0.95rem;
        color: var(--text-muted);
        margin-bottom: calc(var(--spacing-unit) * 1.5);
    }

    .btn-view-details {
        background-color: var(--accent-gold); /* Ensuring this is also gold */
        border: none;
        color: var(--primary-dark);
        font-weight: 600;
        padding: calc(var(--spacing-unit) * 1.5) calc(var(--spacing-unit) * 3);
        border-radius: 8px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        text-decoration: none;
        display: block; /* Make button full width */
        text-align: center;
        margin-top: calc(var(--spacing-unit) * 2);
    }

    .btn-view-details:hover {
        background-color: var(--accent-gold-light);
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        color: var(--primary-dark);
    }

    .no-tournaments-message {
        text-align: center;
        padding: calc(var(--spacing-unit) * 3);
        color: var(--text-muted);
        font-style: italic;
    }

    /* Responsive adjustments */
    @@media (min-width: 768px) {
        .search-bar1 {
            width: auto; /* Auto width on larger screens */
            margin-top: 0;
            flex-grow: 1; /* Allow search bar to grow */
            margin-left: calc(var(--spacing-unit) * 3);
        }
        .btn-view-details {
            display: inline-block; /* Make button inline-block on larger screens */
            width: auto;
        }
    }
</style>
<body>
    <div class="container-fluid">
        <div class="header-section">
            <h1>Tournament List</h1>
            <div class="d-flex align-items-center flex-grow-1 justify-content-end">
                <div class="search-bar1">
                    <input type="text" id="tournamentSearch" class="form-control search-input1" placeholder="Search tournaments by name...">
                </div>
                <a class="btn btn-accent-gold" asp-action="Create" asp-controller="Tournament">
                    <i class="fa-solid fa-plus me-2"></i> Create Tournament
                </a>
            </div>
        </div>

        <div class="tournament-section mb-4">
            <h2>My Tournaments</h2>
            <div class="row">
                @if (Model.MyTournaments != null && Model.MyTournaments.Any(t => t.Winner == ""))
                {
                    @foreach (var tournament in Model.MyTournaments.Where(t => t.Winner == ""))
                    {
                        <div class="col-md-6 col-lg-4 tournament-item" data-name="@tournament.Name.ToLower()">
                            <div class="tournament-card">
                                <div class="tournament-name">@tournament.Name</div>
                                @if (tournament.Host != null && !string.IsNullOrEmpty(tournament.Host.Username))
                                {
                                    <div class="tournament-author">Created by: <strong>@tournament.Host.Username</strong></div>
                                }
                                <a class="btn btn-view-details" asp-controller="Tournament" asp-action="CurrentTournament" asp-route-id="@tournament.Id">
                                    <i class="fa-solid fa-arrow-right me-2"></i> View Details
                                </a>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12">
                        <div class="no-tournaments-message">You haven't joined or created any active tournaments.</div>
                    </div>
                }
            </div>
        </div>

        <div class="tournament-section">
            <h2>All Available Tournaments</h2>
            <div class="row">
                @if (Model.Tournaments != null && Model.Tournaments.Any(t => t.Winner == ""))
                {
                    @foreach (var tournament in Model.Tournaments.Where(t => t.Winner == ""))
                    {
                        <div class="col-md-6 col-lg-4 tournament-item" data-name="@tournament.Name.ToLower()">
                            <div class="tournament-card">
                                <div class="tournament-name">@tournament.Name</div>
                                @if (tournament.Host != null && !string.IsNullOrEmpty(tournament.Host.Username))
                                {
                                    <div class="tournament-author">Created by: <strong>@tournament.Host.Username</strong></div>
                                }
                                <a class="btn btn-view-details" asp-controller="Tournament" asp-action="CurrentTournament" asp-route-id="@tournament.Id">
                                    <i class="fa-solid fa-arrow-right me-2"></i> View Details
                                </a>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12">
                        <div class="no-tournaments-message">No other active tournaments available.</div>
                    </div>
                }
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('tournamentSearch');

            searchInput.addEventListener('keyup', function () {
                const searchTerm = searchInput.value.toLowerCase();
                const tournamentItems = document.querySelectorAll('.tournament-item');

                tournamentItems.forEach(item => {
                    const tournamentName = item.getAttribute('data-name');
                    if (tournamentName.includes(searchTerm)) {
                        item.style.display = ''; // Show item
                    } else {
                        item.style.display = 'none'; // Hide item
                    }
                });
            });
        });
    </script>
</body>