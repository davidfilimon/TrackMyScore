@model TournamentModel

<div>
    <h1>@Model.Tournament.Name</h1>
    <p>@Model.Tournament.Reward, @Model.Tournament.Game.Title, @Model.Tournament.StartDate, @Model.Tournament.RoomCount, @Model.Tournament.MaxPlayers, @Model.Tournament.Code, @Model.Tournament.Type, @Model.Tournament.Host.Username, @Model.Tournament.Winner</p>
    <p>@Model.Tournament.Winner</p>
    <div>
        @if(Model.Tournament.Type == "single"){
            @foreach(var player in Model.Players)
            {
                <p>@player.User.Username</p>    
            }
        } else if (Model.Tournament.Type == "team" && Model.Teams != null) {

            @foreach(var team in Model.Teams)
            {
                <p>@team.Name</p>
                @foreach(var player in Model.Players)
                {
                    @if(player.Team.Id == team.Id){
                        <p>@player.User.Username</p>
                    }
                }
            }
        }
    </div>

    @if(Model.Players.Any(p => p.User.Id == Model.LoggedUser.Id)){
        <button class="btn btn-danger" onclick="leaveTournament(@Model.Tournament.Id)">Leave Tournament</button>
    } else {
        <button class="btn btn-dark" onclick="openJoinModal()">Join Tournament</button>
    }

    @if(@Model.LoggedUser == @Model.Tournament.Host){
        <button class="btn btn-dark" onclick="startTournament()">Start Tournament</button>
        <button class="btn btn-danger" onclick="deleteTournament()">Delete Tournament</button>
    }

    <div>
        @foreach(var room in Model.Rooms){
            <p>
                @room.Name
                <a class="btn btn-dark" asp-action="CurrentRoom" asp-controller="Room" asp-route-id="@room.Id">
                    View Details
                </a>
                @if(room.Stage == -1 && room.Mode == "single"){
                    <button class="btn btn-dark" onclick="startIndividualRoom(@room.Id)">Start Single Match</button>
                } else if(room.Stage == -1 && room.Mode == "team"){
                    <button class="btn btn-dark" onclick="startTeamRoom(@room.Id)">Start Team Match</button>
                } else if(room.Stage == 0){
                    <button class="btn btn-danger" onclick="endRoom(@room.Id)">End Match</button>
                }
            </p>
        }
    </div>
</div>

<div class="modal fade" id="joinModal" tabindex="-1" aria-labelledby="joinModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="joinModalLabel">Join Tournament</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            @if(Model.Tournament.Type == "single"){
                <div class="modal-body">
                    <form id="joinFormSingle" onsubmit="joinTournamentSingle(@Model.Tournament.Id, $('#code').val());">
                        <div class="mb-3">
                            <label for="code" class="form-label">Tournament Code</label>
                            <input type="text" class="form-control" id="code" name="code" required autocomplete="off">
                        </div>
                        <button type="submit" class="btn btn-primary">Join</button>
                    </form>
                </div>
            }
            @if(Model.Tournament.Type == "team"){
                <div class="modal-body">
                    <form id="joinFormTeam" onsubmit="joinTournamentTeam(@Model.Tournament.Id, $('#code').val(), $('#teammates').val(), $('#teamName').val());">
                        <div class="mb-3">
                            <label for="code" class="form-label">Tournament Code</label>
                            <input type="text" class="form-control" id="code" name="code" required autocomplete="off">
                        </div>
                        <div class="mb-3">
                            <label for="teamName" class="form-label">Team Name</label>
                            <input type="text" class="form-control" id="teamName" name="teamName" required autocomplete="off">
                        </div>
                        <div class="mb-3">
                            <label for="teammates" class="form-label">Teammates</label>
                            <select class="form-select" id="teammates" name="teammates" multiple required>
                                @foreach(var user in Model.MutualFollowers){
                                    <option value="@user.Id">@user.Username</option>
                                }
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary">Create Team</button>
                    </form>
                </div>
            }
        </div>
    </div>
</div>
<script>
    function startTournament() {
        $.ajax({
            url: '/Tournament/Start',
            type: 'POST',
            data: {
                id: @Model.Tournament.Id
            },
            success: function (data) {
                if (data.success) {
                    alert('Tournament started successfully!');
                    location.reload();
                } else {
                    alert('Failed to start tournament: ' + data.message);
                }
            },
            error: function (xhr, status, error) {
                console.error('Error starting tournament:', error);
            }
        });
    }

    function deleteTournament() {
        $.ajax({
            url: '/Tournament/Delete',
            type: 'POST',
            data: { id: @Model.Tournament.Id },
            success: function (data) {
                if (data.success) {
                    alert('Tournament deleted successfully!');
                    window.location.href = '/';
                } else {
                    alert('Failed to delete tournament: ' + data.message);
                }
            },
            error: function (xhr, status, error) {
                console.error('Error deleting tournament:', error);
            }
        });
    }

    function openJoinModal() {
        $('#joinModal').modal('show');
    }

    function joinTournamentSingle(id, code){
        $.ajax({
            url: '/Tournament/JoinSingle',
            type: 'POST',
            data: {
                id: id,
                code: code
            },
            success: function(data){
                if(data.success){
                    alert(data.message);
                    location.reload();
                } else {
                    alert(data.message);
                }
            },
            error: function(xhr, status, error){
                console.error('Error joining tournament:', error);
            }
        })
    }

    function joinTournamentTeam(id, code, teammates, teamName){
        $.ajax({
            url: '/Tournament/JoinTeam',
            type: 'POST',
            data: {
                id: id,
                code: code,
                teammates: teammates,
                teamName: teamName
            },
            success: function(data){
                if(data.success){
                    alert(data.message);
                    location.reload();
                } else {
                    alert(data.message);
                }
            },
            error: function(xhr, status, error){
                console.error('Error joining tournament:', error);
            }
        })
    }

    function leaveTournament(id){
        $.ajax({
            url: '/Tournament/Leave',
            type: 'POST',
            data: {
                 id: id
            },
            success: function(data){
                if(data.success){
                    alert(data.message);
                    window.location.href = '/Tournament/CurrentTournament/' + id;
                } else {
                    alert(data.message);
                }
            },
            error: function(xhr, status, error){
                console.error('Error leaving tournament:', error);
            }
        })
    }

    function startIndividualRoom(roomId){
        $.ajax({
            url: "Room/StartIndividual",
            type: "POST",
            data: {
                roomId : roomId
            },
            success: function(data){
                if(data.success){
                    alert(data.message);
                    location.reload();
                } else {
                    alert(data.message);
                }
            },
            error: function(xhr, status, error){
                console.error('Error starting room:', error);
            }
        })
    }
    
    function endRoom(roomId){
        $.ajax({
            url: "Tournament/EndBracket",
            type: "POST",
            data: {
                roomId : roomId
            },
            success: function(data){
                if(data.success){
                    alert(data.message);
                    location.reload();
                } else {
                    alert(data.message);
                }
            },
            error: function(xhr, status, error){
                console.error('Error ending room:', error);
            }
        })
    }

</script>